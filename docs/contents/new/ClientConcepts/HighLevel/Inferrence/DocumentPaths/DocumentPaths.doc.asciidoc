# DocumentPaths
Many API's in elasticsearch describe a path to a document. In NEST besides generating a constructor that takes
and Index, Type and Id seperately we also generate a constructor taking a DocumentPath that allows you to describe the path
to your document more succintly 

Manually newing 

here we create a new document path based on Project with the id 1 

[source, csharp]
----
IDocumentPath path = new DocumentPath<Project>(1);
----
[source, csharp]
----
Expect("project").WhenSerializing(path.Index);
Expect("project").WhenSerializing(path.Type);
Expect(1).WhenSerializing(path.Id);
----
You can still override the inferred index and type name

[source, csharp]
----
path = new DocumentPath<Project>(1).Type("project1");
----
[source, csharp]
----
Expect("project1").WhenSerializing(path.Type);
path = new DocumentPath<Project>(1).Index("project1");
Expect("project1").WhenSerializing(path.Index);
----
there is also a static way to describe such paths 

[source, csharp]
----
path = DocumentPath<Project>.Id(1);
----
[source, csharp]
----
Expect("project").WhenSerializing(path.Index);
Expect("project").WhenSerializing(path.Type);
Expect(1).WhenSerializing(path.Id);
var project = new Project { Name = "hello-world" };
----
here we create a new document path based on a Project 

[source, csharp]
----
IDocumentPath path = new DocumentPath<Project>(project);
----
[source, csharp]
----
Expect("project").WhenSerializing(path.Index);
Expect("project").WhenSerializing(path.Type);
Expect("hello-world").WhenSerializing(path.Id);
----
You can still override the inferred index and type name

[source, csharp]
----
path = new DocumentPath<Project>(project).Type("project1");
----
[source, csharp]
----
Expect("project1").WhenSerializing(path.Type);
path = new DocumentPath<Project>(project).Index("project1");
Expect("project1").WhenSerializing(path.Index);
----
there is also a static way to describe such paths 

[source, csharp]
----
path = DocumentPath<Project>.Id(project);
----
[source, csharp]
----
Expect("project").WhenSerializing(path.Index);
Expect("project").WhenSerializing(path.Type);
Expect("hello-world").WhenSerializing(path.Id);
DocumentPath<Project> p = project;
var project = new Project { Name = "hello-world" };
----
Here we can see and example how DocumentPath helps your describe your requests more tersely 

[source, csharp]
----
var request = new IndexRequest<Project>(2) { Document = project };
----
[source, csharp]
----
request = new IndexRequest<Project>(project) { };
----
when comparing with the full blown constructor and passing document manually 
DocumentPath
T
's benefits become apparent. 

[source, csharp]
----
request = new IndexRequest<Project>(IndexName.From<Project>(), TypeName.From<Project>(), 2)
{
	Document = project
};
----
