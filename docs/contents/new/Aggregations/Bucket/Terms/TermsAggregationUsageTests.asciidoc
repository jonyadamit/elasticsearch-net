[source, csharp]
----
s => s
.Aggregations(a => a
	.Terms("states", st => st
		.Field(p => p.State)
		.MinimumDocumentCount(2)
		.Size(5)
		.ShardSize(100)
		.ShowTermDocumentCountError()
		.ExecutionHint(TermsAggregationExecutionHint.Map)
		.Missing("n/a")
		.Script("'State of Being: '+_value")
		.Order(TermsOrder.TermAscending)
		.Order(TermsOrder.CountDescending)
	)
)
----
[source, csharp]
----
new SearchRequest<Project>
{
	Aggregations = new TermsAggregation("states")
	{
		Field = Field<Project>(p => p.State),
		MinimumDocumentCount = 2,
		Size = 5,
		ShardSize = 100,
		ShowTermDocumentCountError = true,
		ExecutionHint = TermsAggregationExecutionHint.Map,
		Missing = "n/a",
		Script = new InlineScript("'State of Being: '+_value"),
		Order = new List<TermsOrder>
		{
TermsOrder.TermAscending,
TermsOrder.CountDescending
		}
	}
}
----
[source, csharp]
----
response.IsValid.Should().BeTrue();
var states = response.Aggs.Terms("states");
states.Should().NotBeNull();
item.Key.Should().NotBeNullOrEmpty();
item.DocCount.Should().BeGreaterOrEqualTo(1);
----
