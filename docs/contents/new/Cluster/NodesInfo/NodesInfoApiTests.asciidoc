[source, csharp]
----
response.ClusterName.Should().NotBeNullOrWhiteSpace();
response.Nodes.Should().NotBeEmpty().And.HaveCount(1);
var kv = response.Nodes.FirstOrDefault();
kv.Key.Should().NotBeNullOrWhiteSpace();
var node = kv.Value;
Assert(node);
Assert(node.OperatingSystem);
Assert(node.Plugins);
Assert(node.Process);
Assert(node.Jvm);
Assert(node.ThreadPool);
Assert(node.Transport);
Assert(node.Http);
node.Should().NotBeNull();
node.Name.Should().NotBeNullOrWhiteSpace();
node.TransportAddress.Should().NotBeNullOrWhiteSpace();
node.Hostname.Should().NotBeNullOrWhiteSpace();
node.Ip.Should().NotBeNullOrWhiteSpace();
node.Version.Should().NotBeNullOrWhiteSpace();
node.Build.Should().NotBeNullOrWhiteSpace();
node.HttpAddress.Should().NotBeNullOrWhiteSpace();
os.Should().NotBeNull();
os.RefreshInterval.Should().Be(1000);
os.AvailableProcessors.Should().BeGreaterThan(0);
os.Name.Should().NotBeNullOrWhiteSpace();
os.Architecture.Should().NotBeNullOrWhiteSpace();
os.Version.Should().NotBeNullOrWhiteSpace();
plugins.Should().NotBeEmpty();
var plugin = plugins.First();
plugin.Name.Should().NotBeNullOrWhiteSpace();
plugin.Description.Should().NotBeNullOrWhiteSpace();
plugin.Version.Should().NotBeNullOrWhiteSpace();
plugin.ClassName.Should().NotBeNullOrWhiteSpace();
process.Id.Should().BeGreaterThan(0);
process.RefreshIntervalInMilliseconds.Should().BeGreaterThan(0);
jvm.Should().NotBeNull();
jvm.PID.Should().BeGreaterThan(0);
jvm.StartTime.Should().BeGreaterThan(0);
jvm.Version.Should().NotBeNullOrWhiteSpace();
jvm.VMName.Should().NotBeNullOrWhiteSpace();
jvm.VMVendor.Should().NotBeNullOrWhiteSpace();
jvm.VMVersion.Should().NotBeNullOrWhiteSpace();
jvm.GCCollectors.Should().NotBeEmpty();
jvm.MemoryPools.Should().NotBeEmpty();
jvm.Memory.Should().NotBeNull();
jvm.Memory.DirectMaxInBytes.Should().BeGreaterThan(0);
jvm.Memory.NonHeapMaxInBytes.Should().BeGreaterOrEqualTo(0);
jvm.Memory.NonHeapInitInBytes.Should().BeGreaterThan(0);
jvm.Memory.HeapMaxInBytes.Should().BeGreaterThan(0);
jvm.Memory.HeapInitInBytes.Should().BeGreaterThan(0);
pools.Should().NotBeEmpty().And.ContainKey("fetch_shard_store");
var pool = pools["fetch_shard_store"];
pool.KeepAlive.Should().NotBeNullOrWhiteSpace();
pool.Type.Should().Be("scaling");
pool.Min.Should().BeGreaterThan(0);
pool.Max.Should().BeGreaterThan(0);
pool.QueueSize.Should().BeGreaterOrEqualTo(-1);
transport.Should().NotBeNull();
transport.BoundAddress.Should().NotBeEmpty();
transport.PublishAddress.Should().NotBeNullOrWhiteSpace();
http.Should().NotBeNull();
http.BoundAddress.Should().NotBeEmpty();
http.PublishAddress.Should().NotBeNullOrWhiteSpace();
----
