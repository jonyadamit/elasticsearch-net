[source, csharp]
----
response.ClusterName.Should().NotBeNullOrWhiteSpace();
response.MasterNode.Should().NotBeNullOrWhiteSpace();
response.StateUUID.Should().NotBeNullOrWhiteSpace();
response.Version.Should().BeGreaterThan(0);
Assert(response.Nodes, response.MasterNode);
Assert(response.Metadata);
Assert(response.RoutingTable);
Assert(response.RoutingNodes, response.MasterNode);
nodes.Should().NotBeEmpty().And.ContainKey(master);
var node = nodes[master];
node.Name.Should().NotBeNullOrWhiteSpace();
node.TransportAddress.Should().NotBeNullOrWhiteSpace();
meta.ClusterUUID.Should().NotBeNullOrWhiteSpace();
meta.Templates.Should().NotBeEmpty().And.ContainKey("raw_fields");
var rawFieldsTemplate = meta.Templates["raw_fields"];
rawFieldsTemplate.Template.Should().NotBeNullOrWhiteSpace();
rawFieldsTemplate.Settings.Should().NotBeNull();
rawFieldsTemplate.Settings.NumberOfShards.Should().Be(2);
var mapping = rawFieldsTemplate.Mappings["_default_"];
mapping.Should().NotBeNull();
mapping.DynamicTemplates.Should().NotBeEmpty().And.ContainKey("raw_fields");
var rawFields = mapping.DynamicTemplates["raw_fields"];
rawFields.MatchMappingType.Should().Be("string");
rawFields.Match.Should().Be("*");
rawFields.Mapping.Should().NotBeNull();
rawFields.Mapping.Fields.Should().NotBeEmpty().And.ContainKey("raw");
var rawField = rawFields.Mapping.Fields["raw"] as IStringProperty;
rawField.Should().NotBeNull();
rawField.Index.Should().Be(FieldIndexOption.NotAnalyzed);
var i = this.Client.Infer.IndexName(Index<Project>());
var t = this.Client.Infer.TypeName(Type<CommitActivity>());
meta.Indices.Should().NotBeEmpty().And.ContainKey(i);
var index = meta.Indices[i];
index.Aliases.Should().NotBeEmpty().And.Contain("projects-alias");
index.Mappings.Should().NotBeEmpty().And.ContainKey(t);
var commitsMapping = index.Mappings[t];
commitsMapping.ParentField.Should().NotBeNull();
commitsMapping.ParentField.Type.Should().Be(i);
routingTable.Should().NotBeNull();
routingTable.Indices.Should().NotBeEmpty().And.ContainKey("project");
var indices = routingTable.Indices["project"];
indices.Shards.Should().NotBeEmpty();
var shards = indices.Shards.First().Value;
shards.Should().NotBeEmpty();
var shard = shards.First();
shard.AllocationId.Should().NotBeNull();
shard.AllocationId.Id.Should().NotBeNullOrWhiteSpace();
shard.Index.Should().NotBeNullOrWhiteSpace();
shard.Node.Should().NotBeNullOrWhiteSpace();
shard.State.Should().NotBeNullOrWhiteSpace();
shard.Version.Should().BeGreaterThan(0);
routingNodes.Should().NotBeNull();
routingNodes.Nodes.Should().NotBeEmpty().And.ContainKey(master);
var nodes = routingNodes.Nodes[master];
nodes.Should().NotBeEmpty();
var node = nodes.First();
node.AllocationId.Should().NotBeNull();
node.AllocationId.Id.Should().NotBeNullOrWhiteSpace();
node.Index.Should().NotBeNullOrWhiteSpace();
node.Node.Should().NotBeNullOrWhiteSpace();
node.State.Should().NotBeNullOrWhiteSpace();
node.Version.Should().BeGreaterThan(0);
----
