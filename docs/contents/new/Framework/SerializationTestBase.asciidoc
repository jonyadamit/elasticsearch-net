[source, csharp]
----
var o = this.ExpectJson;
this._expectedJsonString = this.Serialize(o);
this._expectedJsonJObject = JToken.Parse(this._expectedJsonString);
var jArray = this._expectedJsonJObject as JArray;
serialized = this.Serialize(o);
var lines = serialized.Split(new [] { '\n' }, StringSplitOptions.RemoveEmptyEntries).ToList();
var zipped = jArray.Children<JObject>().Zip(lines, (j, s) => new {j, s});
var matches = zipped.Select(z => this.TokenMatches(z.j, this.Serialize(z.j), iteration, z.s)).ToList();
matches.Should().OnlyContain(b => b);
matches.Count.Should().Be(lines.Count);
serialized = this.Serialize(o);
var actualJson = JToken.Parse(actual);
var matches = JToken.DeepEquals(expectedJson, actualJson);
Sort(actualJson as JObject);
Sort(expectedJson as JObject);
var sortedExpected = expectedJson.ToString();
var sortedActual = actualJson.ToString();
var message = "This is the first time I am serializing";
message = "This is the second time I am serializing, this usually indicates a problem when deserializing";
sortedExpected.Diff(sortedActual, message);
var props = jObj.Properties().ToList();
prop.Remove();
jObj.Add(prop);
Sort((JObject)prop.Value);
var bytes = GetSerializer().SerializeToBytes(o);
int iteration = 0;
string serialized;
var oAgain = this.Deserialize<T>(serialized);
this.SerializesAndMatches(oAgain, ++iteration,out serialized);
----
